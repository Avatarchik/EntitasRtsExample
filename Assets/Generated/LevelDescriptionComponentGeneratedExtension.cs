//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentExtensionsGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Entitas {

    public partial class Entity {

        public LevelDescriptionComponent levelDescription { get { return (LevelDescriptionComponent)GetComponent(ComponentIds.LevelDescription); } }
        public bool hasLevelDescription { get { return HasComponent(ComponentIds.LevelDescription); } }

        public Entity AddLevelDescription(LevelDescription newLevelDescription) {
            var component = CreateComponent<LevelDescriptionComponent>(ComponentIds.LevelDescription);
            component.LevelDescription = newLevelDescription;
            return AddComponent(ComponentIds.LevelDescription, component);
        }

        public Entity ReplaceLevelDescription(LevelDescription newLevelDescription) {
            var component = CreateComponent<LevelDescriptionComponent>(ComponentIds.LevelDescription);
            component.LevelDescription = newLevelDescription;
            ReplaceComponent(ComponentIds.LevelDescription, component);
            return this;
        }

        public Entity RemoveLevelDescription() {
            return RemoveComponent(ComponentIds.LevelDescription);
        }
    }

    public partial class Pool {

        public Entity levelDescriptionEntity { get { return GetGroup(Matcher.LevelDescription).GetSingleEntity(); } }
        public LevelDescriptionComponent levelDescription { get { return levelDescriptionEntity.levelDescription; } }
        public bool hasLevelDescription { get { return levelDescriptionEntity != null; } }

        public Entity SetLevelDescription(LevelDescription newLevelDescription) {
            if(hasLevelDescription) {
                throw new EntitasException("Could not set levelDescription!\n" + this + " already has an entity with LevelDescriptionComponent!",
                    "You should check if the pool already has a levelDescriptionEntity before setting it or use pool.ReplaceLevelDescription().");
            }
            var entity = CreateEntity();
            entity.AddLevelDescription(newLevelDescription);
            return entity;
        }

        public Entity ReplaceLevelDescription(LevelDescription newLevelDescription) {
            var entity = levelDescriptionEntity;
            if(entity == null) {
                entity = SetLevelDescription(newLevelDescription);
            } else {
                entity.ReplaceLevelDescription(newLevelDescription);
            }

            return entity;
        }

        public void RemoveLevelDescription() {
            DestroyEntity(levelDescriptionEntity);
        }
    }

    public partial class Matcher {

        static IMatcher _matcherLevelDescription;

        public static IMatcher LevelDescription {
            get {
                if(_matcherLevelDescription == null) {
                    var matcher = (Matcher)Matcher.AllOf(ComponentIds.LevelDescription);
                    matcher.componentNames = ComponentIds.componentNames;
                    _matcherLevelDescription = matcher;
                }

                return _matcherLevelDescription;
            }
        }
    }
}
